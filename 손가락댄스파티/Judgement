#include <stdio.h>
#include <Windows.h>
#include<io.h> //_setmode함수와 '_O_U16TEXT' 상수 사용
#include<fcntl.h> // _setmode함수와 '_O_U16TEXT' 상수 사용
#include<conio.h>

#define MAGIC_KEY 224 //화살표 들어올때 선행되어 들어오는 숫자 (방향키는 컴퓨터 입장에서 224-> 72 or 75 or 77 or 80 의 형태로 입력됨)
#define SPACE 32 //스페이스 키 값

void setUnicodeMode() {
    _setmode(fileno(stdout), _O_U16TEXT); // 유니코드 출력 모드 설정
}

// 네모난 창을 그리는 함수
void drawGameWindow() {

    // 위쪽 줄 출력
    wprintf(L"┌");
    for (int i = 0; i <= 160; ++i) {
        wprintf(L"─");
    }
    wprintf(L"┐\n");

    //가운데 부분 출력(구간을 나누는 선, 선과의 너비)
    for (int row = 16; row < 80; ++row) {
        wprintf(L"│");
        for (int col = 0; col < 4; ++col) { // 각 행에 4개의 열을 그림
            for (int i = 0; i < 40; ++i) { // 각 행의 너비 
                wprintf(L" ");

            }
            wprintf(L"│");
        }
        wprintf(L"\n");
    }
    //아랫줄 출력
    wprintf(L"└");
    for (int i = 0; i <= 160; ++i) {
        wprintf(L"─");
    }
    wprintf(L"┘\n");

    //SCORE 출력

    //LIFE 텍스트 출력
}

//화살표 내려오는 함수
void PrintNote() {

}

/*
GetAsyncKetState함수 설명
: https ://coding-factory.tistory.com/693
*/

//판정 확인하는 함수
void Judge() {

    if (GetAsyncKeyState(VK_LEFT) & 0x8000) { //왼쪽입력
    }
    if (GetAsyncKeyState(VK_RIGHT) & 0x8000) { //오른쪽 입력
    }
    if (GetAsyncKeyState(VK_UP) & 0x8000) { //위 입력
    }
    if (GetAsyncKeyState(VK_DOWN) & 0x8000) { //아래 입력
    }
}
int main() {
    setUnicodeMode(); // 유니코드 모드 설정

    system("cls"); // 콘솔 화면 지우기
    drawGameWindow(); // 콘솔 창 그리기

    return 0;
}
